fastlane_version "2.226.0"
default_platform :ios

import '../../Fastfile'

before_all do
  if is_ci
    setup_ci()
  end
end

desc "Installs all Certs and Profiles necessary for development and ad-hoc"
lane :match_me do
  match(
    api_key: appstore_api_key,
    type: "adhoc",
    app_identifier: [
        "io.getstream.flutter",
    ],
    readonly: is_ci,
    force_for_new_devices: true
  )
end

lane :build do |options|
    fetch_dependencies

    sign_enabled = options[:sign_enabled] || false
    sign_param = sign_enabled ? '' : '--no-codesign'

    config_only = options[:config_only] || false
    config_param = config_only ? '--config-only' : ''

    sh_on_root(command: "flutter build ios --no-pub --suppress-analytics --release #{sign_param} #{config_param}")
end

desc "Installs all Certs and Profiles necessary for appstore"
lane :match_appstore do
  match(
    api_key: appstore_api_key,
    type: "appstore",
    app_identifier: [
        "io.getstream.flutter",
    ],
    readonly: is_ci
  )
end

lane :deploy_to_firebase do
    match_me

    build(
        sign_enabled: true,
    )

    build_app(
      scheme: "Runner",
      export_method: "ad-hoc",
      silent: true,
      clean: true,
      include_symbols: true,
      output_directory: './dist',
    )

    message = changelog_from_git_commits(commits_count: 10)

    firebase_app_distribution(
        app: "1:674907137625:ios:cafb9fb076a453c4d7f348",
        groups: "ios-stream-testers"
    )
end

lane :deploy_to_testflight do
    match_appstore

    settings_to_override = {
      :BUNDLE_IDENTIFIER => "io.getstream.flutter",
      :PROVISIONING_PROFILE_SPECIFIER => "match AppStore io.getstream.flutter 1651569762"
    }

    gym(
        workspace: "./Runner.xcworkspace",
        scheme: "Runner",
        export_method: "app-store",
        export_options: "./fastlane/testflight_gym_export_options.plist",
        silent: true,
        clean: true,
        xcargs: settings_to_override,
        include_symbols: true,
        output_directory: "./dist",
    )

    message = changelog_from_git_commits(commits_count: 10)

    upload_to_testflight(
        api_key: appstore_api_key,
        groups: ['Public'],
        distribute_external: true,
        changelog: message,
        username: 'salvatore@getstream.io',
        reject_build_waiting_for_review: true
    )
end


private_lane :appstore_api_key do
@appstore_api_key ||= app_store_connect_api_key(
  key_id: 'MT3PRT8TB7',
  issuer_id: '69a6de96-0738-47e3-e053-5b8c7c11a4d1',
  key_content: ENV.fetch('APPSTORE_API_KEY', nil),
  in_house: false
)
end
