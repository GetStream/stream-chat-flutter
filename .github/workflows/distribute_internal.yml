name: Distribute Internal Builds

on:
  push:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build (android, ios, or both)'
        required: true
        default: 'both'
        type: choice
        options:
          - android
          - ios
          - both

env:
  FLUTTER_VERSION: '3.x'

jobs:
  distribute-android:
    name: Build & Distribute Android
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both' }}
    runs-on: ubuntu-latest
    steps:
      - name: Connect Bot
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.BOT_SSH_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: sample_app/android

      - name: Setup Firebase Service Account'
        working-directory: sample_app/android
        run: echo "${{ secrets.SAMPLE_FIREBASE_UPLOAD_CREDENTIALS }}" | base64 --decode | jq > ./firebase-service-account.json

      - name: Distribute to Firebase
        working-directory: sample_app/android
        run: bundle exec fastlane distribute_to_firebase

  distribute-ios:
    name: Build & Distribute iOS
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'both' }}
    runs-on: macos-latest
    steps:
      - name: Connect Bot
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.BOT_SSH_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: sample_app/ios
          
      - name: Setup Firebase Service Account
        working-directory: sample_app/ios
        run: echo "${{ secrets.SAMPLE_FIREBASE_UPLOAD_CREDENTIALS }}" | base64 --decode | jq > ./firebase-service-account.json
          
      - name: Distribute to Firebase
        working-directory: sample_app/ios
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APPSTORE_API_KEY: ${{ secrets.APPSTORE_API_KEY }}
        run: bundle exec fastlane distribute_to_firebase
